name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
      
      - name: Setup Node.js 💽
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies 📦
        run: npm ci
      
      - name: Setup Pages 📃
        id: pages
        uses: actions/configure-pages@v4
      
      - name: Clean build cache 🧹
        run: |
          rm -rf .next
          rm -rf out
      
      - name: Build with Next.js 🏗️
        run: |
          npx next build
          touch out/.nojekyll
          cp -r public/* out/
          
          # 创建注入到所有HTML的脚本
          echo '<script>
          // GitHub Pages路径修复
          if(window.location.hostname.includes("github.io") && !window.location.pathname.startsWith("/blog")) {
            window.location.href = "/blog" + window.location.pathname;
          }
          </script>' > link-fix-inline.html
          
          # 注入到所有HTML文件中
          find out -name "*.html" -exec sh -c 'sed -i "s|</head>|$(cat link-fix-inline.html | tr "\n" " ")</head>|" {}' \;
        env:
          NEXT_PUBLIC_DEPLOY_TARGET: github
          NEXT_PUBLIC_REPO_NAME: blog
          
      - name: Upload artifact 📤
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages 🚀
        id: deployment
        uses: actions/deploy-pages@v4 